{"metadata":{"kernelspec":{"language":"python","display_name":"Python 3","name":"python3"},"language_info":{"name":"python","version":"3.10.12","mimetype":"text/x-python","codemirror_mode":{"name":"ipython","version":3},"pygments_lexer":"ipython3","nbconvert_exporter":"python","file_extension":".py"},"kaggle":{"accelerator":"none","dataSources":[{"sourceId":8636545,"sourceType":"datasetVersion","datasetId":1633303}],"dockerImageVersionId":30587,"isInternetEnabled":true,"language":"python","sourceType":"notebook","isGpuEnabled":false}},"nbformat_minor":4,"nbformat":4,"cells":[{"cell_type":"markdown","source":"## 베르누이 분포와 이항분포**\n1. [베르누이 분포] 다음 데이터는 100번의 시도에서 각각 성공(1) 또는 실패(0)를 나타냅니다. 이 데이터를 바탕으로 각 시도의 성공 확률을 계산하시오.\n2. [이항분포] 1번 문제에서 계산한 성공 확률을 사용하여, 100번의 시도 중 정확히 60번 성공할 확률을 계산하시오.","metadata":{}},{"cell_type":"code","source":"import pandas as pd\nfrom scipy.stats import binom\n\ndf = pd.read_csv(\"/kaggle/input/bigdatacertificationkr/t3_success.csv\")\ndf\n# 1. 베르누이 분포: 각 시도의 성공 확률 계산\ntotal_attempts = len(df)\nnumber_of_successes = df['Success'].sum()\nsuccess_probability = number_of_successes / total_attempts\nprint(success_probability)\n\n# 2. 이항 분포: 100번의 시도 중 정확히 60번 성공할 확률 계산\nn = 100  # 시도 횟수\nk = 60   # 성공 횟수\nprobability_of_60_successes = binom.pmf(k, n, success_probability)\nprint(probability_of_60_successes)","metadata":{"execution":{"iopub.status.busy":"2024-06-16T02:55:08.262275Z","iopub.execute_input":"2024-06-16T02:55:08.262674Z","iopub.status.idle":"2024-06-16T02:55:09.771247Z","shell.execute_reply.started":"2024-06-16T02:55:08.262638Z","shell.execute_reply":"2024-06-16T02:55:09.769973Z"},"trusted":true},"execution_count":1,"outputs":[{"execution_count":1,"output_type":"execute_result","data":{"text/plain":"    Success\n0         1\n1         0\n2         0\n3         1\n4         1\n..      ...\n95        1\n96        1\n97        1\n98        0\n99        1\n\n[100 rows x 1 columns]","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>Success</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>...</th>\n      <td>...</td>\n    </tr>\n    <tr>\n      <th>95</th>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>96</th>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>97</th>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>98</th>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>99</th>\n      <td>1</td>\n    </tr>\n  </tbody>\n</table>\n<p>100 rows × 1 columns</p>\n</div>"},"metadata":{}}]},{"cell_type":"code","source":"","metadata":{},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"","metadata":{},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"","metadata":{},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"","metadata":{},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"","metadata":{},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"","metadata":{},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"","metadata":{},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"","metadata":{},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"","metadata":{},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"","metadata":{},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"","metadata":{},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"","metadata":{},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"","metadata":{},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"","metadata":{},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"","metadata":{},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"","metadata":{},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"","metadata":{},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"","metadata":{},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"import pandas as pd\nfrom scipy.stats import binom\n\ndf = pd.read_csv(\"/kaggle/input/bigdatacertificationkr/t3_success.csv\")\n\n# 1. 베르누이 분포: 각 시도의 성공 확률 계산\ntotal_attempts = len(df)\nnumber_of_successes = df['Success'].sum()\nsuccess_probability = number_of_successes / total_attempts\nprint(success_probability)\n\n# 2. 이항 분포: 100번의 시도 중 정확히 60번 성공할 확률 계산\nn = 100  # 시도 횟수\nk = 60   # 성공 횟수\nprobability_of_60_successes = binom.pmf(k, n, success_probability)\nprint(probability_of_60_successes)","metadata":{"execution":{"iopub.status.busy":"2023-11-23T02:43:50.175047Z","iopub.execute_input":"2023-11-23T02:43:50.175657Z","iopub.status.idle":"2023-11-23T02:43:50.188773Z","shell.execute_reply.started":"2023-11-23T02:43:50.175613Z","shell.execute_reply":"2023-11-23T02:43:50.18725Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"binom.pmf(k, n, p) 함수는 이항 분포의 확률 질량 함수(Probability Mass Function, PMF)를 계산하는 데 사용됩니다. 이 함수는 이산 확률 분포인 이항 분포에서 특정한 성공 횟수 k가 나타날 확률을 계산합니다. 함수의 각 매개변수는 다음과 같은 의미를 가집니다:\n\n- k: 관측하고자 하는 성공 횟수입니다.\n- n: 전체 시도 횟수입니다.\n- p: 각 시도에서 성공할 확률입니다.","metadata":{}},{"cell_type":"markdown","source":"","metadata":{}},{"cell_type":"code","source":"","metadata":{},"execution_count":null,"outputs":[]}]}