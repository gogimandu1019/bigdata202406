{"metadata":{"kernelspec":{"language":"python","display_name":"Python 3","name":"python3"},"language_info":{"name":"python","version":"3.10.13","mimetype":"text/x-python","codemirror_mode":{"name":"ipython","version":3},"pygments_lexer":"ipython3","nbconvert_exporter":"python","file_extension":".py"},"kaggle":{"accelerator":"none","dataSources":[{"sourceId":8636545,"sourceType":"datasetVersion","datasetId":1633303}],"dockerImageVersionId":30732,"isInternetEnabled":true,"language":"python","sourceType":"notebook","isGpuEnabled":false}},"nbformat_minor":4,"nbformat":4,"cells":[{"cell_type":"markdown","source":"### 잔차이탈도를 구하시오\n고객 정보를 나타낸 데이터이다. 주어진 데이터에서 500개 중 앞에서부터 300개는 train으로, 200개는 test 데이터로 나눈다. 모델을 학습(적합)할 때는 train 데이터를 사용하고, 예측할 때는 test 데이터를 사용한다. 모델은 로지스틱 회귀를 써서 고객이 특정 제품을 구매할지 여부를 예측하되, 페널티는 부과하지 않는다.\n\n종속변수: purchase (0: 구매 안 함, 1: 구매 함)\n\nQ. age, income, marital_status 변수를 독립변수로 purchase를 종속변수로 사용하여 로지스틱 회귀 모형을 만들고, 잔차이탈도를 구하시오. (반올림하여 소수 넷째자리까지 계산)","metadata":{}},{"cell_type":"code","source":"import pandas as pd\ndf = pd.read_csv(\"/kaggle/input/bigdatacertificationkr/Customer_Data.csv\")\ndf","metadata":{"execution":{"iopub.status.busy":"2024-06-20T08:58:07.654630Z","iopub.execute_input":"2024-06-20T08:58:07.655421Z","iopub.status.idle":"2024-06-20T08:58:08.962051Z","shell.execute_reply.started":"2024-06-20T08:58:07.655349Z","shell.execute_reply":"2024-06-20T08:58:08.960569Z"},"trusted":true},"execution_count":1,"outputs":[{"execution_count":1,"output_type":"execute_result","data":{"text/plain":"     age  income  marital_status  children  gender  purchase\n0     62  111980               1         2       1         0\n1     65  107314               0         3       1         0\n2     18   56209               1         1       1         1\n3     21   28010               1         3       0         1\n4     21   79618               0         2       0         1\n..   ...     ...             ...       ...     ...       ...\n495   24   64709               0         3       1         0\n496   27   73630               0         3       0         0\n497   45  117552               0         4       0         1\n498   65   27011               0         2       0         0\n499   53   76487               0         0       0         1\n\n[500 rows x 6 columns]","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>age</th>\n      <th>income</th>\n      <th>marital_status</th>\n      <th>children</th>\n      <th>gender</th>\n      <th>purchase</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>62</td>\n      <td>111980</td>\n      <td>1</td>\n      <td>2</td>\n      <td>1</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>65</td>\n      <td>107314</td>\n      <td>0</td>\n      <td>3</td>\n      <td>1</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>18</td>\n      <td>56209</td>\n      <td>1</td>\n      <td>1</td>\n      <td>1</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>21</td>\n      <td>28010</td>\n      <td>1</td>\n      <td>3</td>\n      <td>0</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>21</td>\n      <td>79618</td>\n      <td>0</td>\n      <td>2</td>\n      <td>0</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>...</th>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n    </tr>\n    <tr>\n      <th>495</th>\n      <td>24</td>\n      <td>64709</td>\n      <td>0</td>\n      <td>3</td>\n      <td>1</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>496</th>\n      <td>27</td>\n      <td>73630</td>\n      <td>0</td>\n      <td>3</td>\n      <td>0</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>497</th>\n      <td>45</td>\n      <td>117552</td>\n      <td>0</td>\n      <td>4</td>\n      <td>0</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>498</th>\n      <td>65</td>\n      <td>27011</td>\n      <td>0</td>\n      <td>2</td>\n      <td>0</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>499</th>\n      <td>53</td>\n      <td>76487</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>1</td>\n    </tr>\n  </tbody>\n</table>\n<p>500 rows × 6 columns</p>\n</div>"},"metadata":{}}]},{"cell_type":"code","source":"# 방법1\nimport pandas as pd\nfrom statsmodels.formula.api import logit\ndf = pd.read_csv(\"/kaggle/input/bigdatacertificationkr/Customer_Data.csv\")\n\n# 데이터셋 분할\ntrain = df.iloc[:300]\ntest = df.iloc[300:]\n\nmodel = logit('purchase ~ age + income + marital_status', data=train).fit()\nprint(model.summary())\nprint(round(-2 * model.llf,2))","metadata":{"execution":{"iopub.status.busy":"2024-06-20T08:58:44.964089Z","iopub.execute_input":"2024-06-20T08:58:44.964532Z","iopub.status.idle":"2024-06-20T08:58:45.021946Z","shell.execute_reply.started":"2024-06-20T08:58:44.964497Z","shell.execute_reply":"2024-06-20T08:58:45.020332Z"},"trusted":true},"execution_count":3,"outputs":[{"name":"stdout","text":"Optimization terminated successfully.\n         Current function value: 0.687415\n         Iterations 4\n                           Logit Regression Results                           \n==============================================================================\nDep. Variable:               purchase   No. Observations:                  300\nModel:                          Logit   Df Residuals:                      296\nMethod:                           MLE   Df Model:                            3\nDate:                Thu, 20 Jun 2024   Pseudo R-squ.:                0.007474\nTime:                        08:58:45   Log-Likelihood:                -206.22\nconverged:                       True   LL-Null:                       -207.78\nCovariance Type:            nonrobust   LLR p-value:                    0.3756\n==================================================================================\n                     coef    std err          z      P>|z|      [0.025      0.975]\n----------------------------------------------------------------------------------\nIntercept          0.3407      0.452      0.753      0.451      -0.546       1.227\nage               -0.0094      0.008     -1.236      0.216      -0.024       0.005\nincome          3.636e-06   4.02e-06      0.904      0.366   -4.25e-06    1.15e-05\nmarital_status    -0.2192      0.235     -0.931      0.352      -0.680       0.242\n==================================================================================\n412.45\n","output_type":"stream"}]},{"cell_type":"code","source":"","metadata":{},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"","metadata":{},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"","metadata":{},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"","metadata":{},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"","metadata":{},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"","metadata":{},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"","metadata":{},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"","metadata":{},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"# 방법1\nimport pandas as pd\nfrom statsmodels.formula.api import logit\ndf = pd.read_csv(\"/kaggle/input/bigdatacertificationkr/Customer_Data.csv\")\n\n# 데이터셋 분할\ntrain = df.iloc[:300]\ntest = df.iloc[300:]\n\nmodel = logit('purchase ~ age + income + marital_status', data=train).fit()\nprint(model.summary())","metadata":{"execution":{"iopub.status.busy":"2024-06-20T00:42:18.835893Z","iopub.execute_input":"2024-06-20T00:42:18.836288Z","iopub.status.idle":"2024-06-20T00:42:18.875503Z","shell.execute_reply.started":"2024-06-20T00:42:18.836259Z","shell.execute_reply":"2024-06-20T00:42:18.874173Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"print(round(-2 * model.llf,2))","metadata":{"execution":{"iopub.status.busy":"2024-06-20T00:43:10.365711Z","iopub.execute_input":"2024-06-20T00:43:10.366117Z","iopub.status.idle":"2024-06-20T00:43:10.372097Z","shell.execute_reply.started":"2024-06-20T00:43:10.366084Z","shell.execute_reply":"2024-06-20T00:43:10.370973Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"# summary 만 보고 계산하면 소수점이 모두 나오지 않기 때문에 차이가 있음\n-2 * -206.22","metadata":{"execution":{"iopub.status.busy":"2024-06-20T00:43:56.880437Z","iopub.execute_input":"2024-06-20T00:43:56.880858Z","iopub.status.idle":"2024-06-20T00:43:56.888084Z","shell.execute_reply.started":"2024-06-20T00:43:56.880827Z","shell.execute_reply":"2024-06-20T00:43:56.886771Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"# 방법2 glm 활용\nfrom statsmodels.formula.api import glm\nimport statsmodels.api as sm\n\n# 1) glm 모델 적합 (로지스틱 회귀를 위해 이항 분포 사용)\nformula = \"purchase ~ age + income + marital_status\"\nmodel = glm(formula, data=train, family=sm.families.Binomial()).fit()\n\n# 2) 잔차이탈도 계산\nprint(model.summary())\nprint(round(model.deviance,2))","metadata":{"execution":{"iopub.status.busy":"2024-06-20T00:45:36.78693Z","iopub.execute_input":"2024-06-20T00:45:36.787363Z","iopub.status.idle":"2024-06-20T00:45:38.00678Z","shell.execute_reply.started":"2024-06-20T00:45:36.78733Z","shell.execute_reply":"2024-06-20T00:45:38.005685Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"","metadata":{},"execution_count":null,"outputs":[]}]}