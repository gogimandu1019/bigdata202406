{"metadata":{"kernelspec":{"language":"python","display_name":"Python 3","name":"python3"},"language_info":{"name":"python","version":"3.10.10","mimetype":"text/x-python","codemirror_mode":{"name":"ipython","version":3},"pygments_lexer":"ipython3","nbconvert_exporter":"python","file_extension":".py"},"kaggle":{"accelerator":"none","dataSources":[{"sourceId":8636545,"sourceType":"datasetVersion","datasetId":1633303}],"dockerImageVersionId":30474,"isInternetEnabled":true,"language":"python","sourceType":"notebook","isGpuEnabled":false}},"nbformat_minor":4,"nbformat":4,"cells":[{"cell_type":"markdown","source":"## 세 가지 다른 교육 방법(A, B, C)을 사용하여 수험생들의 시험 성적을 개선시키는 효과를 평가하고자 한다. 30명의 학생들을 무작위로 세 그룹으로 배정하여 교육을 실시하였고, 시험을 보고 성적을 측정하였습니다. 다음은 각 그룹의 학생들의 성적 데이터입니다.\n\n- 귀무가설(H0): 세 그룹(A, B, C) 간의 평균 성적 차이가 없다.\n- 대립가설(H1 또는 Ha): 세 그룹(A, B, C) 간의 평균 성적 차이가 있다.\n\n### 1. 다음 주어진 데이터로 일원배치법을 수행하여 그룹 간의 평균 성적 차이가 있는지 검정하세요 \n1. f값 (소수 둘째자리)\n2. p값 (소수 여섯째자리)\n3. 검정결과 출력","metadata":{}},{"cell_type":"code","source":"# 각 그룹의 데이터\nimport pandas as pd\npd.set_option('display.float_format', lambda x: f'{x:.20f}') \n\ngroupA = [85, 92, 78, 88, 83, 90, 76, 84, 92, 87]\ngroupB = [79, 69, 84, 78, 79, 83, 79, 81, 86, 88]\ngroupC = [75, 68, 74, 65, 77, 72, 70, 73, 78, 75]\n\nfrom scipy.stats import f_oneway\nf,p = f_oneway(groupA, groupB, groupC)\nprint(round(f, 2))\nprint(format(p, '.6f'))","metadata":{"execution":{"iopub.status.busy":"2024-06-15T08:25:00.736286Z","iopub.execute_input":"2024-06-15T08:25:00.736775Z","iopub.status.idle":"2024-06-15T08:25:00.747383Z","shell.execute_reply.started":"2024-06-15T08:25:00.736735Z","shell.execute_reply":"2024-06-15T08:25:00.745770Z"},"trusted":true},"execution_count":16,"outputs":[{"name":"stdout","text":"16.88\n0.000018\n","output_type":"stream"}]},{"cell_type":"code","source":"","metadata":{},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"### 2. 다음 주어진 데이터로 일원배치법을 수행하여 그룹 간의 평균 성적 차이가 있는지 검정하세요 \n1. f값 (소수 둘째자리)\n2. p값 (소수 여섯째자리)\n3. 검정결과 출력","metadata":{}},{"cell_type":"code","source":"import pandas as pd\n\ngroupA = [85, 92, 78, 88, 83, 90, 76, 84, 92, 87]\ngroupB = [79, 69, 84, 78, 79, 83, 79, 81, 86, 88]\ngroupC = [75, 68, 74, 65, 77, 72, 70, 73, 78, 75]\n\ndata = {'GroupA': groupA, 'GroupB': groupB, 'GroupC': groupC}\n\ndf_wide = pd.DataFrame(data)\ndf_long = df_wide.melt(value_vars=['GroupA', 'GroupB', 'GroupC'], var_name='Group', value_name='Score')\n\nimport statsmodels.api as sm\nfrom statsmodels.formula.api import ols\n\n# Ordinary Least Squares (OLS) model\nmodel = ols('Score ~ C(Group)', data = df_long).fit()\nanova_table = sm.stats.anova_lm(model, typ=2)\nanova_table\n","metadata":{"execution":{"iopub.status.busy":"2024-06-15T08:42:49.184189Z","iopub.execute_input":"2024-06-15T08:42:49.184696Z","iopub.status.idle":"2024-06-15T08:42:51.298447Z","shell.execute_reply.started":"2024-06-15T08:42:49.184656Z","shell.execute_reply":"2024-06-15T08:42:51.297218Z"},"trusted":true},"execution_count":25,"outputs":[{"execution_count":25,"output_type":"execute_result","data":{"text/plain":"                           sum_sq                      df  \\\nC(Group) 834.19999999999754436431  2.00000000000000000000   \nResidual 666.99999999999954525265 27.00000000000000000000   \n\n                               F                 PR(>F)  \nC(Group) 16.88410794602694764421 0.00001752985223798054  \nResidual                     NaN                    NaN  ","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>sum_sq</th>\n      <th>df</th>\n      <th>F</th>\n      <th>PR(&gt;F)</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>C(Group)</th>\n      <td>834.19999999999754436431</td>\n      <td>2.00000000000000000000</td>\n      <td>16.88410794602694764421</td>\n      <td>0.00001752985223798054</td>\n    </tr>\n    <tr>\n      <th>Residual</th>\n      <td>666.99999999999954525265</td>\n      <td>27.00000000000000000000</td>\n      <td>NaN</td>\n      <td>NaN</td>\n    </tr>\n  </tbody>\n</table>\n</div>"},"metadata":{}}]},{"cell_type":"code","source":"","metadata":{},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"","metadata":{},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"","metadata":{},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"import pandas as pd\n\ngroupA = [85, 92, 78, 88, 83, 90, 76, 84, 92, 87]\ngroupB = [79, 69, 84, 78, 79, 83, 79, 81, 86, 88]\ngroupC = [75, 68, 74, 65, 77, 72, 70, 73, 78, 75]\n\ndata = {'GroupA': groupA, 'GroupB': groupB, 'GroupC': groupC}\n\ndf_wide = pd.DataFrame(data)\ndf_long = df_wide.melt(value_vars=['GroupA', 'GroupB', 'GroupC'], var_name='Group', value_name='Score')\n","metadata":{"execution":{"iopub.status.busy":"2024-05-21T05:41:52.599055Z","iopub.execute_input":"2024-05-21T05:41:52.599755Z","iopub.status.idle":"2024-05-21T05:41:52.671756Z","shell.execute_reply.started":"2024-05-21T05:41:52.599708Z","shell.execute_reply":"2024-05-21T05:41:52.671007Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"","metadata":{},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"","metadata":{},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"","metadata":{},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"","metadata":{},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"### 풀이","metadata":{}},{"cell_type":"code","source":"import scipy.stats as stats\n\n# 데이터\ngroupA = [85, 92, 78, 88, 83, 90, 76, 84, 92, 87]\ngroupB = [79, 69, 84, 78, 79, 83, 79, 81, 86, 88]\ngroupC = [75, 68, 74, 65, 77, 72, 70, 73, 78, 75]\n\n# 일원배치법 수행\nf_value, p_value = stats.f_oneway(groupA, groupB, groupC)\n\n# F-value\nprint(round(f_value,2))\n\n# p-value\nprint(format(p_value,'.6f'))","metadata":{"_uuid":"8f2839f25d086af736a60e9eeb907d3b93b6e0e5","_cell_guid":"b1076dfc-b9ad-4769-8c92-a6c4dae69d19","execution":{"iopub.status.busy":"2023-05-19T16:30:44.747762Z","iopub.execute_input":"2023-05-19T16:30:44.748265Z","iopub.status.idle":"2023-05-19T16:30:44.758579Z","shell.execute_reply.started":"2023-05-19T16:30:44.748226Z","shell.execute_reply":"2023-05-19T16:30:44.756957Z"},"trusted":true},"execution_count":null,"outputs":[]}]}