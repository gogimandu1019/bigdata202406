import numpy as np
import pandas as pd # data processing, CSV file I/O (e.g. pd.read_csv)

train = pd.read_csv("/kaggle/input/2024-4-big-data-analytics-certification-kr/train.csv")
test = pd.read_csv("/kaggle/input/2024-4-big-data-analytics-certification-kr/test.csv")

#train.head() #id/ Sex / Length/  Diameter / Height / Weight  /Shucked Weight / Viscera Weight  /Shell Weight /  Age  
#test.head() #age빼고 나머지
#train.info() #sex만 object, 나머지는 float
#test.info()
#train.isnull().sum() - 결측값 없음
#test.isnull().sum() - 결측값 없음
train.shape , test.shape #((15000, 10), (10000, 9))

target = train.pop('Age') #타겟값은 별도보관
test_id = test.pop('id') #id가 제출 양식에서 필요하므로 일단 따로 뺌

train = train.drop(columns = 'id') #id 필요없어서, 그거 뺀 나머지를 사용

train = pd.get_dummies(train)
test = pd.get_dummies(test)
train.head()
test.head()
train.shape, test.shape

from sklearn.model_selection import train_test_split
x_tr, x_val, y_tr, y_val = train_test_split(train, target, test_size = 0.2, random_state = 0)
x_tr.shape, x_val.shape, y_tr.shape, y_val.shape #((12000, 10), (3000, 10), (12000,), (3000,))

from sklearn.ensemble import RandomForestRegressor
model = RandomForestRegressor()
model.fit(x_tr, y_tr)
pred = model.predict(x_val)
pred

from sklearn.metrics import mean_absolute_error
#dir(metrics)
#help(mean_absolute_error)
mae = mean_absolute_error(y_val, pred)
mae #1.376250972222222

pred = model.predict(test)
submission = pd.DataFrame({'id' : test_id,'yield' : pred}).to_csv('submission.csv', index = False)
submission
pd.read_csv('submission.csv')
